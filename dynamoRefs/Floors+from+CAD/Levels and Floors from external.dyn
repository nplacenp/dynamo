{
  "Uuid": "df2991b6-d12e-47b3-b52f-161d3ffc3b4d",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Levels and Floors from external",
  "ElementResolver": {
    "ResolutionMap": {
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "Arc": {
        "Key": "Autodesk.DesignScript.Geometry.Arc",
        "Value": "ProtoGeometry.dll"
      },
      "Number": {
        "Key": "Orchid.Core.Number",
        "Value": "OrchidRB.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.ByElevationAndName@double,string",
      "Id": "2ceaa9bf3edb4acc87a1baf81fc7cf98",
      "Inputs": [
        {
          "Id": "1ef04c28cd0c47d3a84c0439f62b88cc",
          "Name": "elevation",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c365dab0305c4b19979d64baed35aeeb",
          "Name": "name",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffa74c508ff649f9908ba007ba87c183",
          "Name": "Level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Level given it's elevation and name in the project\n\nLevel.ByElevationAndName (elevation: double, name: string): Level"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.Filename, CoreNodeModels",
      "HintPath": "D:\\ARHITEKTURA\\##Revit Experiments\\#Video Course\\Get extermal data\\Floors\\Floors.xlsx",
      "InputValue": "..\\Get extermal data\\Floors\\Floors.xlsx",
      "NodeType": "ExtensionNode",
      "Id": "8ee3c2c979d645269d24ce538153e9fd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8e60a1d8c8d048bf9abe95ad6b3d1c6d",
          "Name": "",
          "Description": "Filename",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows you to select a file on the system to get its filename"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.FileObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "be0b2d064e7749c18da6abde61356e84",
      "Inputs": [
        {
          "Id": "36d74e168354455ebf08149721a7b8b3",
          "Name": "path",
          "Description": "Path to the file.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72d0c52baa6742aa965f2c39f383500c",
          "Name": "file",
          "Description": "File object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a file object from a path."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSOffice.Data.ImportExcel@var,string,bool,bool",
      "Id": "14fea7ae2a5e4b74b6c259c1bfce07c6",
      "Inputs": [
        {
          "Id": "684f859c533041ea8fcfdfac8dec8305",
          "Name": "file",
          "Description": "File representing the Microsoft Excel spreadsheet.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9705c64c389647c383bf1163c1c392bb",
          "Name": "sheetName",
          "Description": "Name of the worksheet containing the data.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f13764cff6f54cbe894c14fe2bde728a",
          "Name": "readAsStrings",
          "Description": "Toggle to switch between reading Excel file as strings.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0f98ab86e184e64b3868c990e2bdc0a",
          "Name": "showExcel",
          "Description": "Toggle to switch between showing and hiding the main Excel window.\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "789d6992cbdd4fd4a599d241b26766e9",
          "Name": "data",
          "Description": "Rows of data from the Excel worksheet.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Read data from a Microsoft Excel spreadsheet. Data is read by row and returned in a series of lists by row. Rows and columns are zero-indexed; for example, the value in cell A1 will appear in the data list at [0,0]. This node requires Microsoft Excel to be installed.\n\nData.ImportExcel (file: var, sheetName: string, readAsStrings: bool = false, showExcel: bool = true): var[][]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Sheet1",
      "Id": "883a7de746904a9893820324e66925df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e562caa3384b4d1d911e1a259d2cfc45",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "968c459d69984aa2b4dfae67d7b71de4",
      "Inputs": [
        {
          "Id": "def0ae967857462faaf687ea5fed1f93",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "5353d4a8827f45d68d15f77e97c0d69f",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8753fc371fc4a7ba39dda24224b1a97",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "70d21cac90eb4aaf9867d63a8fa32c43",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8b7b59c5695947a79a5a7811ae937055",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "90b494daab1c403d99e6f20e30487a6a",
      "Inputs": [
        {
          "Id": "697fa47413644588905d59bf73032d50",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a1ad8ae06662423d8c2a1ce3453acb1e",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a4f86421e29426f9bd0c990710dedeb",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "2be613de2261424a854b308501bf2693",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "588853157ba44cb2aee666b0d06a7328",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Floor.ByOutlineTypeAndLevel@Autodesk.DesignScript.Geometry.PolyCurve,Revit.Elements.FloorType,Revit.Elements.Level",
      "Id": "25411d7888b443e3a161e2db3e1dd211",
      "Inputs": [
        {
          "Id": "72cf59ef212a475ca928c0e2d2bc9eb9",
          "Name": "outline",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c46c368121594fe1813dcb883e9ecf39",
          "Name": "floorType",
          "Description": "FloorType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f0ae1a27ebc4c07a5c0498a065a8299",
          "Name": "level",
          "Description": "Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9424d0e25b544849ca0af2d1a626bf8",
          "Name": "Floor",
          "Description": "The floor",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Revit Floor given its curve outline and Level\n\nFloor.ByOutlineTypeAndLevel (outline: PolyCurve, floorType: FloorType, level: Level): Floor"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "83f631bd-8cdd-48a4-b0fe-9266b04d3310-0004b351"
      ],
      "Id": "1668fba92c6b438fb85faa3bde755f2e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5bf9fd92e8d047dbbd71f64e98f83d25",
          "Name": "Element",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "6b7a2a9ed4c04ea4bf0bdc2d42912e6e",
      "Inputs": [
        {
          "Id": "6b2e51f514ba46f88a7e1277c4f40620",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "32eec712bccb4f84bc54c8d03b7628fa",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.FloorTypes, DSRevitNodesUI",
      "SelectedIndex": 4,
      "SelectedString": "Standard",
      "NodeType": "ExtensionNode",
      "Id": "2a69b9ebad9f45418007d6ac8376aeb3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3a5604e3c57545dfafa7d42bdefd1154",
          "Name": "Floor Type",
          "Description": "The selected Floor Type",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All floor types available in the document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c84855d4-eb7e-4574-86a5-04867486df63",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "1d8fa3a772d64c698a506aa6bfaa1b5e",
      "Inputs": [
        {
          "Id": "82d88ed086494be9964a54b126ce3fb6",
          "Name": "_curves",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e118ae3444b24a22b433d8d81df55898",
          "Name": "_groupedCurves",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will take any input of flat list of curves and group them into sublists containing \"joinable\" curves that is continous curves. They might form closed curves or open curves. Use PolyCurve.ByJoinedCurves to convert output groups of curves into single PolyCurves"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.PolyCurve.ByJoinedCurves@Autodesk.DesignScript.Geometry.Curve[],double",
      "Id": "0842812c9fb1442183031253bf62e4e5",
      "Inputs": [
        {
          "Id": "bd28323f2bc84107a48c9dcd36f98eb3",
          "Name": "curves",
          "Description": "Curves to join into polycurve\n\nCurve[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fb99efc7ccb4322ae106fa43b8ca146",
          "Name": "joinTolerance",
          "Description": "Tolerance to determine size of gap allowed between curves to be joined\n\ndouble\nDefault value : 0.001",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d3ec6869925a4a578cf5199be50c69c0",
          "Name": "PolyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Make PolyCurve by joining curves. Flips curve as needed for connectivity. Choose a preferred join tolerance between 1e-6 and 1e-3 units.\n\nPolyCurve.ByJoinedCurves (curves: Curve[], joinTolerance: double = 0.001): PolyCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0d20800b2e52466f80c5cfc963b84d27",
      "Inputs": [
        {
          "Id": "e4bace69555749b68ede50dfde03238f",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fafc774ba7b640b4b939bc8a72fa7b49",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e76e9c3462e42bdaf5d212fcdbe98b6",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "5;",
      "Id": "6d15cd7e73024f7e9e6e7babf78ecc5f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "48809219e2384b509c83ea5adb28ad28",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.RemoveItemAtIndex@var[]..[],int[]",
      "Id": "f6efccb250ec4ff7ae84899129039415",
      "Inputs": [
        {
          "Id": "8866d7dbe8b244bca50a1af7a4c6b23a",
          "Name": "list",
          "Description": "List to remove an item or items from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f81ad3540c6a43768949e6e0901658d1",
          "Name": "indices",
          "Description": "Index or indices of the item(s) to be removed.\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "99df2392a9114725820b1f469f4663a7",
          "Name": "list",
          "Description": "List with items removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes an item from the given list at the specified index.\n\nList.RemoveItemAtIndex (list: var[]..[], indices: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4b49358c-e6c7-4819-b4b3-3a4ccee4f290",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9c93634f82fd43b788274ce8f5cf05a8",
      "Inputs": [
        {
          "Id": "b0f98ebdc917490680afb3e2458a7982",
          "Name": "polyCurve",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74cab08ab9fa413ca079673ae2982637",
          "Name": "points",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all the unique start and end points of the underlying curves in a sorted list."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4b49358c-e6c7-4819-b4b3-3a4ccee4f290",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "d8d825bdd28c46aa9149680aacb04be3",
      "Inputs": [
        {
          "Id": "daa37cd413304ee7805c7e0a80e13720",
          "Name": "polyCurve",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0a7f6ce793634e14bbd2f39fc3918d94",
          "Name": "points",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets all the unique start and end points of the underlying curves in a sorted list."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "3da46a13dda741098d9966899408ad1a",
      "Inputs": [
        {
          "Id": "ebf2219d0f9f404ca0e0ebaf9566579e",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "181ae83cd95f4f31bd18faea791bd442",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77de041047ad4db1bd9bd1e7f89bb558",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "23813fa04bc54b53aef639be612635a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "cda3dfa3e4f14c01aabbc9e692ca68cb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0044c22d816346c799fa9a48a75e931d",
      "Inputs": [
        {
          "Id": "52a0e472b99d482f897b61a18c41e9b1",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "76b87856559548edb87375107942b746",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd29756c3a5b4b38970802c565cc7974",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "2;",
      "Id": "4759d23617ae4ff694284c9a264a572a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6f7ebb7d56ce470893a8500416f93e8c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.ByTwoPoints@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Point",
      "Id": "f48cb4ca820d4d138745f342102333ce",
      "Inputs": [
        {
          "Id": "2208a46050f64031a2afca0137584ffd",
          "Name": "start",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "337e4586dfe8467685a5c3583097f0e4",
          "Name": "end",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed83f9fdb2a945a28d1e6171861ad7b6",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Form a Vector by two end points. The result is a vector from the start to the end point.\n\nVector.ByTwoPoints (start: Point, end: Point): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector",
      "Id": "d2b6ca837ee14dadbd736815442a6081",
      "Inputs": [
        {
          "Id": "c7ed22e1e01f4e98981135ae28a0f184",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2652d8c5283460e8929ac4e63a98b28",
          "Name": "direction",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f8fc29dc69243d093546a8c5f0b19d7",
          "Name": "Geometry",
          "Description": "Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translate geometry in the given direction by the vector length\n\nGeometry.Translate (direction: Vector): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "fb25675a4119472e8b712e9392368788",
      "Inputs": [
        {
          "Id": "ee795ab7c8844ab7917dc341295663df",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b51602dbedc842ff973592d0cbd94ed0",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a4ab42e054e54312877d889827cf6de8",
          "Name": "list",
          "Description": "New list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "8249e0670e9e4bc38f3a9ce0c9077d13",
      "Inputs": [
        {
          "Id": "27d778b56ba64f16ba0a6459a5f979ae",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "11b6138b38aa46d797e534100df3084a",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a678a20b6389416f853d1037008b8b21",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca7f40eaebdf4b848337171931a3ccf0",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Height Offset From Level\";",
      "Id": "553b34f34d9d45949353dd40fc9a361b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "53fbfd54065347f9a44cb41d2934a693",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "05dc2aa2cfbd40639643c189164ed7de",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2545b5b2c4974982b2f18c5cecb3f7d5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "dbcf130a2d0c41ab86d22a9c16d37a0a",
      "Inputs": [
        {
          "Id": "76301334afaf4d2cb71480f7d223b4f3",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fdee8d9cfa444515a0f081914ac1bac9",
          "Name": "list",
          "Description": "New list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f74369d7-8bd8-42f9-bda2-217a7d31363d",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "2dbc2f024c6742d4a47758977f7b060c",
      "Inputs": [
        {
          "Id": "18f99e1a12654c36823aa0ac53e0c618",
          "Name": "polyCurve",
          "Description": "PolyCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "939569d0a4354d60bf470e685e04a0cc",
          "Name": "radius",
          "Description": "var\nDefault value : 1 (disabled)",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e6f226193b2f4e0dbc69983eb3de0eb4",
          "Name": "out",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "A node that checks the fillet direction"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "200;",
      "Id": "b223e13287f249f487699c496d59e4e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "dd6aeb5a70194b638f94181913080ea4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "ffa74c508ff649f9908ba007ba87c183",
      "End": "5f0ae1a27ebc4c07a5c0498a065a8299",
      "Id": "00d2ee8165554d02944d2d5db8e075b2"
    },
    {
      "Start": "8e60a1d8c8d048bf9abe95ad6b3d1c6d",
      "End": "36d74e168354455ebf08149721a7b8b3",
      "Id": "0b492775587c4fb1a6221fcbf53235a4"
    },
    {
      "Start": "72d0c52baa6742aa965f2c39f383500c",
      "End": "684f859c533041ea8fcfdfac8dec8305",
      "Id": "af2b7c10629e41529f7a512d53f65e25"
    },
    {
      "Start": "789d6992cbdd4fd4a599d241b26766e9",
      "End": "def0ae967857462faaf687ea5fed1f93",
      "Id": "09033c2321644f9798751a833a831fe7"
    },
    {
      "Start": "789d6992cbdd4fd4a599d241b26766e9",
      "End": "697fa47413644588905d59bf73032d50",
      "Id": "807fab7c072c4de4b4ce750e835fe6d4"
    },
    {
      "Start": "e562caa3384b4d1d911e1a259d2cfc45",
      "End": "9705c64c389647c383bf1163c1c392bb",
      "Id": "dcb8442095e641f4ba6ca2fd8dab141c"
    },
    {
      "Start": "f8753fc371fc4a7ba39dda24224b1a97",
      "End": "c365dab0305c4b19979d64baed35aeeb",
      "Id": "62b6b9d566154480967d2400ffaef7dd"
    },
    {
      "Start": "8b7b59c5695947a79a5a7811ae937055",
      "End": "5353d4a8827f45d68d15f77e97c0d69f",
      "Id": "3c472dd44bf84fbfb028ba9219b0c545"
    },
    {
      "Start": "2a4f86421e29426f9bd0c990710dedeb",
      "End": "1ef04c28cd0c47d3a84c0439f62b88cc",
      "Id": "11eeafc86966419b8fc04e67ae608675"
    },
    {
      "Start": "588853157ba44cb2aee666b0d06a7328",
      "End": "a1ad8ae06662423d8c2a1ce3453acb1e",
      "Id": "9ab8dfbb1e6340b4be683cc60994006e"
    },
    {
      "Start": "f9424d0e25b544849ca0af2d1a626bf8",
      "End": "27d778b56ba64f16ba0a6459a5f979ae",
      "Id": "13abafad192d460a8dee2671ca155d53"
    },
    {
      "Start": "5bf9fd92e8d047dbbd71f64e98f83d25",
      "End": "6b2e51f514ba46f88a7e1277c4f40620",
      "Id": "6ccbda1d4de54714acaa1825270cb7c4"
    },
    {
      "Start": "32eec712bccb4f84bc54c8d03b7628fa",
      "End": "82d88ed086494be9964a54b126ce3fb6",
      "Id": "089de0f3790241d594cd5370eb73c693"
    },
    {
      "Start": "3a5604e3c57545dfafa7d42bdefd1154",
      "End": "c46c368121594fe1813dcb883e9ecf39",
      "Id": "9e7edcd37c034728bd2a8a9f15c0b7cc"
    },
    {
      "Start": "e118ae3444b24a22b433d8d81df55898",
      "End": "bd28323f2bc84107a48c9dcd36f98eb3",
      "Id": "f9c20da0c29b4a5485b021bdae423200"
    },
    {
      "Start": "d3ec6869925a4a578cf5199be50c69c0",
      "End": "e4bace69555749b68ede50dfde03238f",
      "Id": "520450db6b364019930c0754a34e6e5f"
    },
    {
      "Start": "d3ec6869925a4a578cf5199be50c69c0",
      "End": "8866d7dbe8b244bca50a1af7a4c6b23a",
      "Id": "1eb3d9c3af954228a0bea5f7f1a66525"
    },
    {
      "Start": "2e76e9c3462e42bdaf5d212fcdbe98b6",
      "End": "b0f98ebdc917490680afb3e2458a7982",
      "Id": "8fe823a44ac04ef6957201b52e82bf5b"
    },
    {
      "Start": "2e76e9c3462e42bdaf5d212fcdbe98b6",
      "End": "ee795ab7c8844ab7917dc341295663df",
      "Id": "2695c4c7c7e24054b303eda48ad1118c"
    },
    {
      "Start": "48809219e2384b509c83ea5adb28ad28",
      "End": "fafc774ba7b640b4b939bc8a72fa7b49",
      "Id": "8255a4e164fc41fe9993382e34caf8bf"
    },
    {
      "Start": "48809219e2384b509c83ea5adb28ad28",
      "End": "f81ad3540c6a43768949e6e0901658d1",
      "Id": "e28f2307044043b8a06b3c5d26d4acfe"
    },
    {
      "Start": "99df2392a9114725820b1f469f4663a7",
      "End": "daa37cd413304ee7805c7e0a80e13720",
      "Id": "e2e6e0b90b8e4306817599f3432fea96"
    },
    {
      "Start": "99df2392a9114725820b1f469f4663a7",
      "End": "c7ed22e1e01f4e98981135ae28a0f184",
      "Id": "dead540fe0794c36ab5e807932f7d8ee"
    },
    {
      "Start": "74cab08ab9fa413ca079673ae2982637",
      "End": "ebf2219d0f9f404ca0e0ebaf9566579e",
      "Id": "c9718cfff432415883ca1fc4ba91a71b"
    },
    {
      "Start": "0a7f6ce793634e14bbd2f39fc3918d94",
      "End": "52a0e472b99d482f897b61a18c41e9b1",
      "Id": "f9708c1ebce248bfb34fbef14026d3a5"
    },
    {
      "Start": "77de041047ad4db1bd9bd1e7f89bb558",
      "End": "337e4586dfe8467685a5c3583097f0e4",
      "Id": "0ad6fc4dfc414ab3a3d0ee9bc150146b"
    },
    {
      "Start": "cda3dfa3e4f14c01aabbc9e692ca68cb",
      "End": "181ae83cd95f4f31bd18faea791bd442",
      "Id": "c246a20f03404b39adc459851bef391b"
    },
    {
      "Start": "dd29756c3a5b4b38970802c565cc7974",
      "End": "2208a46050f64031a2afca0137584ffd",
      "Id": "c90aca6485264a1e8bf4d1bf5ca94333"
    },
    {
      "Start": "6f7ebb7d56ce470893a8500416f93e8c",
      "End": "76b87856559548edb87375107942b746",
      "Id": "2fa0355d288a45fa864373d0a7eea0c6"
    },
    {
      "Start": "ed83f9fdb2a945a28d1e6171861ad7b6",
      "End": "a2652d8c5283460e8929ac4e63a98b28",
      "Id": "f68f18e9781a4fea8902e9bd275d1337"
    },
    {
      "Start": "4f8fc29dc69243d093546a8c5f0b19d7",
      "End": "b51602dbedc842ff973592d0cbd94ed0",
      "Id": "06fc0a8ad5864189bea9110fbe13ca86"
    },
    {
      "Start": "a4ab42e054e54312877d889827cf6de8",
      "End": "76301334afaf4d2cb71480f7d223b4f3",
      "Id": "79635e6735bc45699b605a5a5c750171"
    },
    {
      "Start": "53fbfd54065347f9a44cb41d2934a693",
      "End": "11b6138b38aa46d797e534100df3084a",
      "Id": "9264290ce6a044a5b74a81880b1b1142"
    },
    {
      "Start": "2545b5b2c4974982b2f18c5cecb3f7d5",
      "End": "a678a20b6389416f853d1037008b8b21",
      "Id": "022d0d083d17480ca538ad7144e95fff"
    },
    {
      "Start": "fdee8d9cfa444515a0f081914ac1bac9",
      "End": "18f99e1a12654c36823aa0ac53e0c618",
      "Id": "4c222a44b99942feb7c517f0ddd4e146"
    },
    {
      "Start": "e6f226193b2f4e0dbc69983eb3de0eb4",
      "End": "72cf59ef212a475ca928c0e2d2bc9eb9",
      "Id": "6f9e3418456341f8997518ac0394944d"
    },
    {
      "Start": "dd6aeb5a70194b638f94181913080ea4",
      "End": "939569d0a4354d60bf470e685e04a0cc",
      "Id": "b2ef789f5db44c019f47d308161f129a"
    }
  ],
  "Dependencies": [
    "c84855d4-eb7e-4574-86a5-04867486df63",
    "4b49358c-e6c7-4819-b4b3-3a4ccee4f290",
    "f74369d7-8bd8-42f9-bda2-217a7d31363d"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "archi-lab.net",
      "Version": "2020.23.2",
      "ReferenceType": "Package",
      "Nodes": [
        "1d8fa3a772d64c698a506aa6bfaa1b5e"
      ]
    },
    {
      "Name": "spring nodes",
      "Version": "203.1.0",
      "ReferenceType": "Package",
      "Nodes": [
        "9c93634f82fd43b788274ce8f5cf05a8",
        "d8d825bdd28c46aa9149680aacb04be3"
      ]
    }
  ],
  "Bindings": [
    {
      "NodeId": "2ceaa9bf-3edb-4acc-87a1-baf81fc7cf98",
      "Binding": {
        "ByElevationAndName_InClassDecl-1_InFunctionScope-1_Instance0_2ceaa9bf-3edb-4acc-87a1-baf81fc7cf98": ""
      }
    },
    {
      "NodeId": "25411d78-88b4-43e3-a161-e2db3e1dd211",
      "Binding": {
        "ByOutlineTypeAndLevel_InClassDecl-1_InFunctionScope-1_Instance0_25411d78-88b4-43e3-a161-e2db3e1dd211": ""
      }
    }
  ],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.3.0.5885",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -5021.5354629517915,
      "EyeY": 29358.18922220662,
      "EyeZ": 23413.248689059896,
      "LookX": 5016.5354629517915,
      "LookY": -29347.18922220662,
      "LookZ": -23421.248689059896,
      "UpX": 0.13009141372958252,
      "UpY": 0.78369345732583717,
      "UpZ": -0.607372035097525
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Level.ByElevationAndName",
        "Id": "2ceaa9bf3edb4acc87a1baf81fc7cf98",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2086.2838071881406,
        "Y": -281.33455851730628
      },
      {
        "ShowGeometry": true,
        "Name": "File Path",
        "Id": "8ee3c2c979d645269d24ce538153e9fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2.63548137573275,
        "Y": 13.5346926558879
      },
      {
        "ShowGeometry": true,
        "Name": "File From Path",
        "Id": "be0b2d064e7749c18da6abde61356e84",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 185.28435675804519,
        "Y": 32.666149624044209
      },
      {
        "ShowGeometry": true,
        "Name": "Data.ImportExcel",
        "Id": "14fea7ae2a5e4b74b6c259c1bfce07c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 345.83184455430512,
        "Y": 42.110119494412515
      },
      {
        "ShowGeometry": true,
        "Name": "String",
        "Id": "883a7de746904a9893820324e66925df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 172.18146716967573,
        "Y": 162.08135080668617
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "968c459d69984aa2b4dfae67d7b71de4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 888.56996581842191,
        "Y": -43.513904339027249
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "70d21cac90eb4aaf9867d63a8fa32c43",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 771.16604411898481,
        "Y": 13.22533393150934
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "90b494daab1c403d99e6f20e30487a6a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 887.103135036758,
        "Y": 124.60107896363866
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "2be613de2261424a854b308501bf2693",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 775.47230095826353,
        "Y": 146.44352537339262
      },
      {
        "ShowGeometry": true,
        "Name": "Floor.ByOutlineTypeAndLevel",
        "Id": "25411d7888b443e3a161e2db3e1dd211",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4330.3628799104263,
        "Y": 174.47313802952166
      },
      {
        "ShowGeometry": true,
        "Name": "Select Model Element",
        "Id": "1668fba92c6b438fb85faa3bde755f2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 418.78017311548331,
        "Y": 417.20373398474794
      },
      {
        "ShowGeometry": false,
        "Name": "Element.Geometry",
        "Id": "6b7a2a9ed4c04ea4bf0bdc2d42912e6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 622.714350835022,
        "Y": 430.866352313354
      },
      {
        "ShowGeometry": true,
        "Name": "Floor Types",
        "Id": "2a69b9ebad9f45418007d6ac8376aeb3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3278.929186742409,
        "Y": 221.6825775798016
      },
      {
        "ShowGeometry": false,
        "Name": "Group Curves",
        "Id": "1d8fa3a772d64c698a506aa6bfaa1b5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 902.187358030433,
        "Y": 460.291004298968
      },
      {
        "ShowGeometry": false,
        "Name": "PolyCurve.ByJoinedCurves",
        "Id": "0842812c9fb1442183031253bf62e4e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1229.2387001589977,
        "Y": 491.08698258848005
      },
      {
        "ShowGeometry": false,
        "Name": "List.GetItemAtIndex",
        "Id": "0d20800b2e52466f80c5cfc963b84d27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1495.10685599953,
        "Y": 871.03816599216532
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6d15cd7e73024f7e9e6e7babf78ecc5f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1411.1125338280203,
        "Y": 770.81369895841556
      },
      {
        "ShowGeometry": false,
        "Name": "List.RemoveItemAtIndex",
        "Id": "f6efccb250ec4ff7ae84899129039415",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1520.1287371000653,
        "Y": 136.33761161130815
      },
      {
        "ShowGeometry": true,
        "Name": "ꟿ PolyCurve.Points",
        "Id": "9c93634f82fd43b788274ce8f5cf05a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1820.1328928508362,
        "Y": 768.86608418065509
      },
      {
        "ShowGeometry": true,
        "Name": "ꟿ PolyCurve.Points",
        "Id": "d8d825bdd28c46aa9149680aacb04be3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1946.4425573836106,
        "Y": 398.17695575059452
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "3da46a13dda741098d9966899408ad1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2244.9722954356371,
        "Y": 763.34594337932617
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "23813fa04bc54b53aef639be612635a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2106.0,
        "Y": 786.0
      },
      {
        "ShowGeometry": true,
        "Name": "List.GetItemAtIndex",
        "Id": "0044c22d816346c799fa9a48a75e931d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2281.8650797841988,
        "Y": 411.119232560008
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "4759d23617ae4ff694284c9a264a572a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2026.7406108839787,
        "Y": 560.09739609474116
      },
      {
        "ShowGeometry": true,
        "Name": "Vector.ByTwoPoints",
        "Id": "f48cb4ca820d4d138745f342102333ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2545.2299407859196,
        "Y": 718.31462467232689
      },
      {
        "ShowGeometry": false,
        "Name": "Geometry.Translate",
        "Id": "d2b6ca837ee14dadbd736815442a6081",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2815.4167534104608,
        "Y": 376.48997491247559
      },
      {
        "ShowGeometry": false,
        "Name": "List.AddItemToFront",
        "Id": "fb25675a4119472e8b712e9392368788",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3070.3348885669693,
        "Y": 329.7486396124927
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "8249e0670e9e4bc38f3a9ce0c9077d13",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5024.4190616253964,
        "Y": 73.186791610429339
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "553b34f34d9d45949353dd40fc9a361b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4690.5468493825274,
        "Y": 97.651687275562324
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "05dc2aa2cfbd40639643c189164ed7de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4810.45751954446,
        "Y": 195.13829711354509
      },
      {
        "ShowGeometry": false,
        "Name": "List.Reverse",
        "Id": "dbcf130a2d0c41ab86d22a9c16d37a0a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3364.5020103976176,
        "Y": 400.61865567927049
      },
      {
        "ShowGeometry": true,
        "Name": "Fillet_Polycurve_Custom",
        "Id": "2dbc2f024c6742d4a47758977f7b060c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3734.889458304659,
        "Y": 399.49607502435805
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b223e13287f249f487699c496d59e4e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3437.0,
        "Y": 558.0
      }
    ],
    "Annotations": [
      {
        "Id": "47cd93ba3ed3420b96126f8aae93cc82",
        "Title": "Alternative 2",
        "Nodes": [
          "968c459d69984aa2b4dfae67d7b71de4",
          "70d21cac90eb4aaf9867d63a8fa32c43",
          "90b494daab1c403d99e6f20e30487a6a",
          "2be613de2261424a854b308501bf2693"
        ],
        "Left": 761.16604411898481,
        "Top": -96.713904339027252,
        "Width": 316.60392169943708,
        "Height": 335.75742971241982,
        "FontSize": 36.0,
        "InitialTop": -43.513904339027249,
        "InitialHeight": 334.95742971241987,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      },
      {
        "Id": "57d1e30ae16b48dfbe9aaa5f62baeba1",
        "Title": "Curves To Be moved",
        "Nodes": [
          "f6efccb250ec4ff7ae84899129039415"
        ],
        "Left": 1510.1287371000653,
        "Top": 39.937611611308142,
        "Width": 198.4,
        "Height": 214.60000000000002,
        "FontSize": 36.0,
        "InitialTop": 136.33761161130815,
        "InitialHeight": 148.2,
        "TextblockHeight": 86.4,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6eca02a26ea348da9851dc72dcc82672",
        "Title": "Base Curve",
        "Nodes": [
          "0d20800b2e52466f80c5cfc963b84d27"
        ],
        "Left": 1485.10685599953,
        "Top": 817.83816599216527,
        "Width": 199.2,
        "Height": 171.40000000000003,
        "FontSize": 36.0,
        "InitialTop": 871.03816599216532,
        "InitialHeight": 148.2,
        "TextblockHeight": 43.2,
        "Background": "#FFC1D676"
      }
    ],
    "X": -4039.8645615406645,
    "Y": 6.2951214118588155,
    "Zoom": 1.095221059712896
  }
}